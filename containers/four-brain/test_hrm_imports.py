#!/usr/bin/env python3
"""
Test script to verify HRM imports and basic functionality
"""

import sys
import os

# Add src to path
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'src'))

try:
    print("üîç Testing HRM imports...")
    
    # Test basic imports
    from shared.hrm import HRMOrchestrator, BlackwellOptimizer, BlackwellOptimizationConfig
    print("‚úÖ HRM core imports successful")
    
    from shared.hrm import HRMModule, HRMHModule, HRMLModule
    print("‚úÖ HRM module classes imported successfully")
    
    from shared.hrm import HRMModuleType, HRMPrecision, HRMTaskType
    print("‚úÖ HRM enums imported successfully")
    
    from shared.hrm import HRMRequest, HRMResponse, HRMConvergenceState
    print("‚úÖ HRM data structures imported successfully")
    
    # Test BlackwellOptimizer initialization
    config = BlackwellOptimizationConfig()
    optimizer = BlackwellOptimizer(config)
    print("‚úÖ BlackwellOptimizer initialized successfully")
    
    # Test HRMOrchestrator initialization (without Triton client)
    orchestrator = HRMOrchestrator(triton_client=None, blackwell_optimizations=True)
    print("‚úÖ HRMOrchestrator initialized successfully")
    
    print("\nüéâ All HRM components imported and initialized successfully!")
    print("‚úÖ HRM system is ready for deployment")
    
except ImportError as e:
    print(f"‚ùå Import error: {e}")
    sys.exit(1)
except Exception as e:
    print(f"‚ùå Initialization error: {e}")
    sys.exit(1)
